import argparse
import os
import sys
from subprocess import check_call, run, PIPE

try:
    import requests
except ImportError:
    error_msg = "Missing module: requests. To fix it, please run '$ pip install requests'"
    sys.exit(error_msg)

def is_wget_installed():
    result = run(["wget", "--version"], stdout=PIPE, stderr=PIPE, universal_newlines=True)
    return result.returncode == 0

if not is_wget_installed():
    error_msg = "Missing command: wget. To fix it, please install wget on your system."
    sys.exit(error_msg)

def parse_args():
    parser = argparse.ArgumentParser(description="Download files from Thingiverse.")
    parser.add_argument("--output", "-o", help="Output directory", default="/home/simtech/Downloads/Collected_ur5e/objects")
    return parser.parse_args()

def ensure_directory_exists(directory):
    if not os.path.isdir(directory):
        os.makedirs(directory)
        print("Created directory: {}".format(directory))

def download_file(file_id, output_dir, index):
    ensure_directory_exists(output_dir)
    
    url = "https://www.thingiverse.com/download:{}".format(file_id)
    r = requests.head(url)
    link = r.headers.get("Location", None)
    
    if link is None:
        print("File {} is no longer available on Thingiverse.".format(file_id))
        return

    _, ext = os.path.splitext(link)
    output_file = "{}{}".format(index, ext.lower())
    output_file = os.path.join(output_dir, output_file)
    
    print("Downloading {}".format(output_file))
    command = ["wget", "-q", "--tries=10", "--output-document={}".format(output_file), link]
    check_call(command)

    # Rename the downloaded file
    new_output_file = os.path.join(output_dir, "{}.stl".format(index))
    os.rename(output_file, new_output_file)
    print(new_output_file)

def main():
    args = parse_args()
    file_ids = [37272,37288,37289,37888,38094,38110,38641,39579,39640,39649,39922,40993,41178,42250,42545,42629,42638,42652,43689,43988,44234,44395,44899,44900,45514,45617,46263,46543,47098,48131,49415,49424,49852,51637,53159,53884,55092,55584,56096,56526,56954,57418,57468,57469,57587,58055,58734,58874,60262,60276,61792,63769,64194,64992,65003,65004,65395,65402,65509,65641,66485,67223,68370,68511,68595,68648,68662,68812,69265,69267,69729,69730,70380,70943,71920,72093,72100,72101,72668,72669,72948,73163,73339,73783,73784,73868,73876,73877,74457,74642,75090,75119,75121,75232,76052,76678,79073,79194,79241,80020,80557,80609,80756,80937,81267,81309,82378,83023,83024,84511,84781,84931,85493,85699,86235,86236,86241,87431,87432,88855,89527,89528,89538,89541,90430,90442,91145,91146,91206,91408,91610,92420,92836,92949,94126,94677,94887,95409,95412,95413,95414,95416,95417,95419,95420,95421,95423,95425,95427,95430,95431,95432,95434,95435,95436,95494,95778,96637,97166,97168,97177,97248,97589,97594,97595,99898,100330,100331,100506,100507,100642,102794,103087,103142,104290,106039,107041,107068,107437,110172,110173,110201,110211,110370,111006,111552,112925,112996,113340,113344,113653,113889,115601,116067,117150,118035,118288,118298,118882,120787,121869,122308,123044,124370,124374,124534,125067,126196,126282,126284,128336,128482,128558,128559,128913,129867,129871,129892,129894,129896,129927,129982,129986,130030,130031,131720,131723,131730,132057,134621,134633,135214,135222,135676,136385,138581,145500,153370,153951,153961,162331,168079,188403,188505,189404,194884,196121,196122,196123,196188,196191,196192,200695,203344,206495,213388,213389,214253,214255,217015,220653,225945,225955,225957,225958,225960,225966,226160,237628,237632,237640,240294,255522,260537,269125,271877,286158,286160,301885,301886,301887,301888,301889,314589,360068,360069,360074,363533,366361,368889,375242,375247,375248,375249,375257,375281,383022,400238,423816,428604,431936,461112,461115,464844,472015,472019,472021,472022,472024,472029,472030,472040,472042,472043,472045,472046,472047,472048,472050,472052,472095,472116,472129,472152,472153,472166,472191,488050,501149,533453,548867,557384,565652,567032,577765,591212,591218,591221,601644,601645,601646,601647,611675,611676,621685,627441,693473,697204,697207,697208,697212,697213,697215,697216,697223,697226,697227,702385,702390,702395,702407,702419,702420,703556,711199,723898,762593,762605,763398,777038,777039,777041,779993,780079,788566,789071,789077,789796,789798,814657,814659,814670,815475,841122,856332,858854,886948,888452,888460,904480,908459,908460,914490,916991,919994,1005271,1018278,1018279,1036315,1036317,1036320,1036399,1036473,1053568,1063851,1066899,1082231,1120777,1146180,1146192,1158268,1207656,1207665,1223672,1223673,1223674,1223675,1228200,1273629,1273630,1291011,1307398,1312962,1339228,1382595,1382596,1395584,1396885,1396889,1396890,1396899,1396901,1411692,1411695,1411701,1417962,1458670,1458673,1458684,1458689,1458692,1458701,1492345,1501546,1505023,1505025,1505032,1536353,1536354,1536355,1536356,1566089,1582409,1614064,1620054,1620057,1620064,1681117,1716275,1716277,1716278,1716280,1722406];
   # update id here

    for index, file_id in enumerate(file_ids, start=1):
        download_file(file_id, args.output, index)

if __name__ == "__main__":
    main()
